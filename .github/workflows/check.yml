name: Unit Tests

# Schedule runs to run twice a day

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 13 * * *" # This schedule runs at 1pm UTC every day

env:
  FLYTE_SDK_LOGGING_LEVEL: 10 # debug

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  detect-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-versions: ${{ env.python_versions }}
    steps:
      - name: Set Python versions for run
        run: |
          if [[ ${{ github.event_name }} == "schedule" ]]; then
            echo "python_versions=[\"3.8\",\"3.9\",\"3.10\",\"3.11\"]" >> $GITHUB_ENV
          else
            echo "python_versions=[\"3.11\"]" >> $GITHUB_ENV
          fi

  flytesnacks:
    name: Flytesnacks examples
    needs:
      - detect-python-versions
    runs-on: ${{ matrix.os }}
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ${{fromJson(needs.detect-python-versions.outputs.python-versions)}}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: 'Clear action cache'
        uses: ./.github/actions/clear-action-cache
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements files
          key: ${{ format('{0}-pip-{1}', runner.os, hashFiles('dev-requirements.in', 'requirements.in')) }}
      - name: Install dependencies
        run: |
          pip install uv
          uv venv
          source .venv/bin/activate
          make setup
      - name: Run flytesnacks example locally
        run: |
          source .venv/bin/activate
          make flytesnacks
          
  functional-tests:
    name: Functional tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: setup sandbox
        run: |
          flytectl demo start
          flytectl config init
      - name: run functional tests
        run: |
          make functional_tests
