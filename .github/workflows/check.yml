name: Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 13 * * *" # This schedule runs at 1pm UTC every day

env:
  FLYTE_SDK_LOGGING_LEVEL: 20 # info

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  flytesnacks-local:
    name: Run Flytesnacks examples locally
    runs-on: ${{ matrix.os }}
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: 'Clear action cache'
        uses: ./.github/actions/clear-action-cache
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements files
          key: ${{ format('{0}-pip-{1}', runner.os, hashFiles('dev-requirements.in', 'requirements.in')) }}
      - name: Install dependencies
        run: |
          pip install uv
          make uv-setup
      - name: Run flytesnacks example
        run: |
          export FLYTECTL_CONFIG=./config-dogfood-gcp.yaml
          pyflyte run workflow/integration_tests.py flytesnacks_wf

  register-integration-workflows:
    name: Register integration workflows to the remote cluster
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name != 'pull_request' }}
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
      CLIENT_SECRET_DOGFOOD_GCP: ${{ secrets.CLIENT_SECRET_DOGFOOD_GCP }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: 'Clear action cache'
        uses: ./.github/actions/clear-action-cache
      - name: Login to Flyteorg GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ vars.FLYTEORG_USERNAME }}
          password: ${{ secrets.FLYTEORG_PASSWORD }}
      - name: Login to Unionai GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ format('{0}-pip-{1}', runner.os, hashFiles('dev-requirements.in', 'requirements.in')) }}
      - name: Install dependencies
        run: |
          pip install uv
          make uv-setup
      - name: Register workflows
        run: |
          export FLYTECTL_CONFIG=./config-dogfood-gcp.yaml
          make register
          
  functional-tests:
    name: Functional tests
    runs-on: ubuntu-latest
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
      FLYTE_SDK_RICH_TRACEBACKS: 0
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          submodules: 'true'
      - name: 'Clear action cache'
        uses: ./.github/actions/clear-action-cache
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: unionai/flytectl-setup-action@v0.0.3
      - name: setup sandbox
        run: |
          flytectl demo start --disable-agent
          flytectl config init
          flytectl create project --name flyte-conformance --id flyte-conformance --description "end to end tests" --labels app=flyte
      - name: Install dependencies
        run: |
          pip install uv
          make uv-setup
      - name: run functional tests
        run: |
          make functional_tests

  push-flytekit-images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare flytekit Image Names
        id: image-names
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/flytekit
          tags: |
            latest
            ${{ github.sha }}
      - name: Build & Push flyte agent Docker Image to Github Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.image-names.outputs.tags }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-register:
    name: Register examples to dev cluster
    needs: [push-flytekit-images]
    runs-on: ubuntu-latest
    env:
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
      PYTHONUNBUFFERED: "1"
      CLIENT_SECRET_DOGFOOD_GCP: ${{ secrets.CLIENT_SECRET_DOGFOOD_GCP }}
      # FLYTE_FORCE_PUSH_IMAGE_SPEC: "1"
      # FLYTE_INTERNAL_IMAGE: ghcr:io/unionai/flytekit:${{ github.sha }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          submodules: 'true'
      - name: 'Clear action cache'
        uses: ./.github/actions/clear-action-cache
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Login to Unionai GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Flyteorg GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ vars.FLYTEORG_USERNAME }}
          password: ${{ secrets.FLYTEORG_PASSWORD }}
      - name: Install dependencies
        run: |
          pip install uv
          make uv-setup
      - name: register workflows
        run: |
          export FLYTECTL_CONFIG=./config-dogfood-gcp.yaml
          pyflyte register workflow/integration_tests.py